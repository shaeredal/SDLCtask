variables:
  azureSubscription: 'Free Trial(1)(08856ff3-d5d7-4a58-b749-94b4b8665feb)'
  functionappName: 'SDLCtask'
  buildConfiguration: 'Release'

trigger:
- master

stages:
- stage: UnitTests
  displayName: Unit Tests
  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'
    steps:
    - script: dotnet test $(Build.SourcesDirectory)/src/SDLCtask.Tests/SDLCtask.Tests.csproj
- stage: Build
  displayName: Build
  dependsOn: UnitTests
  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'shaeredal'
        scannerMode: 'MSBuild'
        projectKey: 'shaeredal_SDLCtask'
        projectName: 'SDLCtask'
    - script: |
        dotnet restore $(Build.SourcesDirectory)/src/SDLCtask.sln
        dotnet build $(Build.SourcesDirectory)/src/SDLCtask.sln --configuration Release
    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
    - task: DotNetCoreCLI@2
      displayName: Publish Output
      inputs:
        command: publish
        arguments: '--configuration Release --output publish_output'
        projects: '$(Build.SourcesDirectory)/src/SDLCtask.sln'
        publishWebProjects: false
        modifyOutputPath: true
        zipAfterPublish: false
    - task: ArchiveFiles@2
      displayName: Archive files
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/SDLCtask/publish_output/src'
        includeRootFolder: false
        archiveFile: '$(System.ArtifactsDirectory)/build$(Build.BuildId).zip'
    - task: PublishBuildArtifacts@1
      displayName: Publish build artifacts
      inputs:
        PathtoPublish: '$(System.ArtifactsDirectory)'
        ArtifactName: 'drop'
- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  jobs:
  - job:
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        connectionType: 'AzureRM'
        azureSubscription: '$(azureSubscription)'
        appType: 'functionApp'
        webAppName: '$(functionappName)'
        packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'
